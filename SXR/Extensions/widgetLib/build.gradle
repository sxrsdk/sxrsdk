buildscript {
    repositories {
        jcenter()
    }
}

allprojects {
    repositories {
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        jcenter()
    }
}

apply plugin: 'com.android.library'

repositories {
    flatDir {
        dirs '../../sxr-libs'
    }
}

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 26
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
}

project.ext.jomlVersion = "1.9.1-SNAPSHOT"

dependencies {
    if (findProject(':sxrsdk')) {
        implementation project(':sxrsdk')
    } else {
        implementation(name: 'sxrsdk-release', ext: 'aar')
    }

    implementation 'com.android.support:support-v4:23.4.0'
    implementation "org.joml:joml-android:${jomlVersion}"
    implementation 'com.google.code.gson:gson:2.8.+'
}
clean {}.doLast {
    def sxrLibs = project.rootDir.absolutePath + "/../sxr-libs"
    if (file(sxrLibs).exists()) {
        project.delete(sxrLibs + '/' + project.name + '-release.aar')
        project.delete(sxrLibs + '/' + project.name + '-debug.aar')
    }
}

task copyJarToBin(type: Copy) {
    outputs.upToDateWhen { false }
    from tasks.matching { it.name.startsWith('bundle') }
    into project.rootDir.absolutePath + "/../sxr-libs"
}

tasks.whenTaskAdded { task ->
    if (task.name == 'bundleDebugAar') {
        task.finalizedBy(copyJarToBin)
    } else if (task.name == 'bundleReleaseAar') {
        task.finalizedBy(copyJarToBin)
    }
}
