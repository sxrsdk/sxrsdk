/*
 * Copyright (c) 2016. Samsung Electronics Co., LTD
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'

repositories {
    flatDir {
        dirs '../../../../../sxr-libs'
    }
}

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

ext.sxrVersion='4.0.0-SNAPSHOT'
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    if (findProject(':sxrsdk')) {
        implementation project(':sxrsdk')
    } else {
        implementation(name: 'sxrsdk-debug', ext: 'aar')
    }
    implementation (project(':3DCursorLibrary'))
    implementation project(':gearwearlibrary')
}


clean {}.doLast {
    def sxrLibs = project.rootDir.absolutePath + "/../sxr-libs"
    if (file(sxrLibs).exists()) {
        project.delete(sxrLibs + '/' + project.name + '-release.aar')
        project.delete(sxrLibs + '/' + project.name + '-debug.aar')
    }
}

task copyJarToBin(type: Copy) {
    outputs.upToDateWhen { false }
    from tasks.matching { it.name.startsWith('bundle') }
    into project.rootDir.absolutePath + "/../sxr-libs"
}

tasks.whenTaskAdded { task ->
    if (task.name == 'bundleDebugAar') {
        task.finalizedBy(copyJarToBin)
    } else if (task.name == 'bundleReleaseAar') {
        task.finalizedBy(copyJarToBin)
    }
}
