/* Copyright 2016 Samsung Electronics Co., LTD
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.samsungxr;

import android.view.MotionEvent;

import com.samsungxr.io.SXRCursorController;

/**
 * This interface defines events generated by picking
 * with a cursor controller. This interface is similar
 * to IPickEvents except that it also includes touch events.
 * @see SXRPicker
 * @see SXRCursorController
 * @see SXRPicker.SXRPickedObject
 */
public interface ITouchEvents extends IEvents
{
    /**
     * Called when the pick ray first enters a scene object.
     * @param sceneObj scene object picked
     * @param collision information about the collision
     */
    void onEnter(SXRNode sceneObj, SXRPicker.SXRPickedObject collision);
    
    /**
     * Called when the pick ray first exits a scene object.
     * @param sceneObj scene object no longer picked.
     * @param collision information about the last collision before exit,
     *                  with previous hit location
     */
    void onExit(SXRNode sceneObj, SXRPicker.SXRPickedObject collision);

    /**
     * Called when the scene object's collider is touched
     * (the pick ray penetrates and the action button is down).
     * @param sceneObj scene object touched
     * @param collision information about the collision
     */
    void onTouchStart(SXRNode sceneObj, SXRPicker.SXRPickedObject collision);

    /**
     * Called when action button is up while the pick ray penetrates the scene object.
     * @param sceneObj scene object no longer picked.
     */
    void onTouchEnd(SXRNode sceneObj, SXRPicker.SXRPickedObject collision);

    /**
     * Called while the pick ray penetrates a scene object.
     * The collision has the touch flag settings.
     * @param sceneObj scene object picked
     * @param collision information about the collision
     */    
    void onInside(SXRNode sceneObj, SXRPicker.SXRPickedObject collision);

    /**
     * Called when a notion event is received when an object is not picked
     * This happens when the action key is held down or released when
     * nothing is picked.
     * @param picker  SXRPicker which generated the event
     * @param motionEvent Android MotionEvent associated with the action
     */
    void onMotionOutside(SXRPicker picker, MotionEvent motionEvent);
}
